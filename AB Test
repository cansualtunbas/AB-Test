{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "0c5dbd2b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-14T16:59:54.869020Z",
     "iopub.status.busy": "2024-09-14T16:59:54.868493Z",
     "iopub.status.idle": "2024-09-14T16:59:57.530563Z",
     "shell.execute_reply": "2024-09-14T16:59:57.529429Z"
    },
    "papermill": {
     "duration": 2.670829,
     "end_time": "2024-09-14T16:59:57.533104",
     "exception": false,
     "start_time": "2024-09-14T16:59:54.862275",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Bir firmanın web site bilgilerini içeren bu veri setinde kullanıcıların gördükleri ve tıkladıkları reklam sayıları gibi bilgilerin yanı sıra  buradan gelen kazanç bilgileri yer almaktadır. Kontrol ve Test grubu olmak üzere iki ayrı veri seti vardır. Bu veri setleri ab_testing.xlsx excel’inin ayrı sayfalarında yer almaktadır. Kontrol grubuna Maximum Bidding, test grubuna Average Bidding uygulanmıştır.\n",
    "\n",
    " #Impression:Reklam görüntüleme sayısı\n",
    " #Click:Görüntülenen reklama tıklama sayısı\n",
    " #Purchase:Tıklanan reklamlar sonrası satın alınan ürün sayısı\n",
    " #Earning: Satın alınan ürünler sonrası elde edilen kazanç\n",
    "\n",
    "import itertools\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "# !pip install statsmodels\n",
    "import statsmodels.stats.api as sms\n",
    "from scipy.stats import ttest_1samp, shapiro, levene, ttest_ind, mannwhitneyu, \\\n",
    "    pearsonr, spearmanr, kendalltau, f_oneway, kruskal\n",
    "from statsmodels.stats.proportion import proportions_ztest\n",
    "\n",
    "pd.set_option('display.max_columns', None)\n",
    "pd.set_option('display.max_rows', 10)\n",
    "pd.set_option('display.float_format', lambda x: '%.5f' % x)\n",
    "\n",
    "\n",
    "#Görev 1:  Veriyi Hazırlama ve Analiz Etme\n",
    "#Adım 1:  ab_testing_data.xlsx adlı kontrol ve test grubu verilerinden oluşan veri setini okutunuz. Kontrol ve test grubu verilerini ayrı değişkenlere atayınız.\n",
    "\n",
    "df_control=pd.read_excel(\"/kaggle/input/ab-testing/ab_testing.xlsx\", 'Control Group')\n",
    "df_test = pd.read_excel(\"/kaggle/input/ab-testing/ab_testing.xlsx\", 'Test Group')\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "775834fe",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-14T16:59:57.542980Z",
     "iopub.status.busy": "2024-09-14T16:59:57.542387Z",
     "iopub.status.idle": "2024-09-14T16:59:57.577271Z",
     "shell.execute_reply": "2024-09-14T16:59:57.576251Z"
    },
    "papermill": {
     "duration": 0.04243,
     "end_time": "2024-09-14T16:59:57.579589",
     "exception": false,
     "start_time": "2024-09-14T16:59:57.537159",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Impression</th>\n",
       "      <td>40.00000</td>\n",
       "      <td>101711.44907</td>\n",
       "      <td>20302.15786</td>\n",
       "      <td>45475.94296</td>\n",
       "      <td>85726.69035</td>\n",
       "      <td>99790.70108</td>\n",
       "      <td>115212.81654</td>\n",
       "      <td>147539.33633</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Click</th>\n",
       "      <td>40.00000</td>\n",
       "      <td>5100.65737</td>\n",
       "      <td>1329.98550</td>\n",
       "      <td>2189.75316</td>\n",
       "      <td>4124.30413</td>\n",
       "      <td>5001.22060</td>\n",
       "      <td>5923.80360</td>\n",
       "      <td>7959.12507</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Purchase</th>\n",
       "      <td>40.00000</td>\n",
       "      <td>550.89406</td>\n",
       "      <td>134.10820</td>\n",
       "      <td>267.02894</td>\n",
       "      <td>470.09553</td>\n",
       "      <td>531.20631</td>\n",
       "      <td>637.95709</td>\n",
       "      <td>801.79502</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Earning</th>\n",
       "      <td>40.00000</td>\n",
       "      <td>1908.56830</td>\n",
       "      <td>302.91778</td>\n",
       "      <td>1253.98952</td>\n",
       "      <td>1685.84720</td>\n",
       "      <td>1975.16052</td>\n",
       "      <td>2119.80278</td>\n",
       "      <td>2497.29522</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              count         mean         std         min         25%  \\\n",
       "Impression 40.00000 101711.44907 20302.15786 45475.94296 85726.69035   \n",
       "Click      40.00000   5100.65737  1329.98550  2189.75316  4124.30413   \n",
       "Purchase   40.00000    550.89406   134.10820   267.02894   470.09553   \n",
       "Earning    40.00000   1908.56830   302.91778  1253.98952  1685.84720   \n",
       "\n",
       "                   50%          75%          max  \n",
       "Impression 99790.70108 115212.81654 147539.33633  \n",
       "Click       5001.22060   5923.80360   7959.12507  \n",
       "Purchase     531.20631    637.95709    801.79502  \n",
       "Earning     1975.16052   2119.80278   2497.29522  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_control.head()\n",
    "df_control.shape\n",
    "df_control.describe().T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "0868fcd8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-14T16:59:57.590006Z",
     "iopub.status.busy": "2024-09-14T16:59:57.589193Z",
     "iopub.status.idle": "2024-09-14T16:59:57.610454Z",
     "shell.execute_reply": "2024-09-14T16:59:57.609289Z"
    },
    "papermill": {
     "duration": 0.029138,
     "end_time": "2024-09-14T16:59:57.612954",
     "exception": false,
     "start_time": "2024-09-14T16:59:57.583816",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Impression</th>\n",
       "      <td>40.00000</td>\n",
       "      <td>120512.41176</td>\n",
       "      <td>18807.44871</td>\n",
       "      <td>79033.83492</td>\n",
       "      <td>112691.97077</td>\n",
       "      <td>119291.30077</td>\n",
       "      <td>132050.57893</td>\n",
       "      <td>158605.92048</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Click</th>\n",
       "      <td>40.00000</td>\n",
       "      <td>3967.54976</td>\n",
       "      <td>923.09507</td>\n",
       "      <td>1836.62986</td>\n",
       "      <td>3376.81902</td>\n",
       "      <td>3931.35980</td>\n",
       "      <td>4660.49791</td>\n",
       "      <td>6019.69508</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Purchase</th>\n",
       "      <td>40.00000</td>\n",
       "      <td>582.10610</td>\n",
       "      <td>161.15251</td>\n",
       "      <td>311.62952</td>\n",
       "      <td>444.62683</td>\n",
       "      <td>551.35573</td>\n",
       "      <td>699.86236</td>\n",
       "      <td>889.91046</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Earning</th>\n",
       "      <td>40.00000</td>\n",
       "      <td>2514.89073</td>\n",
       "      <td>282.73085</td>\n",
       "      <td>1939.61124</td>\n",
       "      <td>2280.53743</td>\n",
       "      <td>2544.66611</td>\n",
       "      <td>2761.54540</td>\n",
       "      <td>3171.48971</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              count         mean         std         min          25%  \\\n",
       "Impression 40.00000 120512.41176 18807.44871 79033.83492 112691.97077   \n",
       "Click      40.00000   3967.54976   923.09507  1836.62986   3376.81902   \n",
       "Purchase   40.00000    582.10610   161.15251   311.62952    444.62683   \n",
       "Earning    40.00000   2514.89073   282.73085  1939.61124   2280.53743   \n",
       "\n",
       "                    50%          75%          max  \n",
       "Impression 119291.30077 132050.57893 158605.92048  \n",
       "Click        3931.35980   4660.49791   6019.69508  \n",
       "Purchase      551.35573    699.86236    889.91046  \n",
       "Earning      2544.66611   2761.54540   3171.48971  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_test.head()\n",
    "df_test.shape\n",
    "df_test.describe().T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "8d577581",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-14T16:59:57.623346Z",
     "iopub.status.busy": "2024-09-14T16:59:57.622956Z",
     "iopub.status.idle": "2024-09-14T16:59:57.631366Z",
     "shell.execute_reply": "2024-09-14T16:59:57.630340Z"
    },
    "papermill": {
     "duration": 0.016209,
     "end_time": "2024-09-14T16:59:57.633589",
     "exception": false,
     "start_time": "2024-09-14T16:59:57.617380",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(80, 4)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Adım 3: Analiz işleminden sonra concat metodunu kullanarak kontrol ve test grubu verilerini birleştiriniz. \n",
    "df= pd.concat([df_test, df_control])\n",
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "d7b7c08d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-14T16:59:57.644042Z",
     "iopub.status.busy": "2024-09-14T16:59:57.643638Z",
     "iopub.status.idle": "2024-09-14T16:59:57.648204Z",
     "shell.execute_reply": "2024-09-14T16:59:57.647216Z"
    },
    "papermill": {
     "duration": 0.012227,
     "end_time": "2024-09-14T16:59:57.650280",
     "exception": false,
     "start_time": "2024-09-14T16:59:57.638053",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Görev 2:  A/B Testinin Hipotezinin Tanımlanması\n",
    "# Adım 1: Hipotezi tanımlayınız.\n",
    "#H0 : M1 = M2 Teklif verme türünün değiştirilmesi satın alınan ürün sayısında değişikliğe neden olmamıştır.(test ve kontrol gruplarınıns satın alma ortalamaları arasında anlamlı bir ilişki yoktur)\n",
    "#H1 : M1!= M2 .. değişikliğe neden olmuştur."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "52364c5c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-14T16:59:57.661392Z",
     "iopub.status.busy": "2024-09-14T16:59:57.660370Z",
     "iopub.status.idle": "2024-09-14T16:59:57.667286Z",
     "shell.execute_reply": "2024-09-14T16:59:57.666326Z"
    },
    "papermill": {
     "duration": 0.014551,
     "end_time": "2024-09-14T16:59:57.669282",
     "exception": false,
     "start_time": "2024-09-14T16:59:57.654731",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "582.1060966484677"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Adım 2: Kontrol ve test grubu için purchase (kazanç) ortalamalarını analiz ediniz.\n",
    "df_test[\"Purchase\"].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "dc224bd8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-14T16:59:57.680432Z",
     "iopub.status.busy": "2024-09-14T16:59:57.679455Z",
     "iopub.status.idle": "2024-09-14T16:59:57.686759Z",
     "shell.execute_reply": "2024-09-14T16:59:57.685617Z"
    },
    "papermill": {
     "duration": 0.015124,
     "end_time": "2024-09-14T16:59:57.688912",
     "exception": false,
     "start_time": "2024-09-14T16:59:57.673788",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "550.8940587702316"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_control[\"Purchase\"].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "53155da5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-14T16:59:57.699756Z",
     "iopub.status.busy": "2024-09-14T16:59:57.699364Z",
     "iopub.status.idle": "2024-09-14T16:59:57.709994Z",
     "shell.execute_reply": "2024-09-14T16:59:57.708979Z"
    },
    "papermill": {
     "duration": 0.018664,
     "end_time": "2024-09-14T16:59:57.712167",
     "exception": false,
     "start_time": "2024-09-14T16:59:57.693503",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Impression</th>\n",
       "      <th>Click</th>\n",
       "      <th>Purchase</th>\n",
       "      <th>Earning</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>82529.45927</td>\n",
       "      <td>6090.07732</td>\n",
       "      <td>665.21125</td>\n",
       "      <td>2311.27714</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>98050.45193</td>\n",
       "      <td>3382.86179</td>\n",
       "      <td>315.08489</td>\n",
       "      <td>1742.80686</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>82696.02355</td>\n",
       "      <td>4167.96575</td>\n",
       "      <td>458.08374</td>\n",
       "      <td>1797.82745</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>109914.40040</td>\n",
       "      <td>4910.88224</td>\n",
       "      <td>487.09077</td>\n",
       "      <td>1696.22918</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>108457.76263</td>\n",
       "      <td>5987.65581</td>\n",
       "      <td>441.03405</td>\n",
       "      <td>1543.72018</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Impression      Click  Purchase    Earning\n",
       "0  82529.45927 6090.07732 665.21125 2311.27714\n",
       "1  98050.45193 3382.86179 315.08489 1742.80686\n",
       "2  82696.02355 4167.96575 458.08374 1797.82745\n",
       "3 109914.40040 4910.88224 487.09077 1696.22918\n",
       "4 108457.76263 5987.65581 441.03405 1543.72018"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_control.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "03222f9c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-14T16:59:57.723730Z",
     "iopub.status.busy": "2024-09-14T16:59:57.723345Z",
     "iopub.status.idle": "2024-09-14T16:59:57.730997Z",
     "shell.execute_reply": "2024-09-14T16:59:57.729838Z"
    },
    "papermill": {
     "duration": 0.016563,
     "end_time": "2024-09-14T16:59:57.733636",
     "exception": false,
     "start_time": "2024-09-14T16:59:57.717073",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Test Stat = 0.9773, p-value = 0.5891\n"
     ]
    }
   ],
   "source": [
    "#Görev 3:  Hipotez Testinin Gerçekleştirilmesi\n",
    "# Adım 1: Hipotez testi yapılmadan önce varsayım kontrollerini yapınız. Bunlar Normallik Varsayımı ve Varyans Homojenliğidir. Kontrol ve test grubunun normallik varsayımına uyup uymadığını Purchase değişkeni  üzerinden ayrı ayrı test ediniz.\n",
    "\n",
    "#Normallik Varsayımı :\n",
    "#H0: Normal dağılım varsayımı sağlanmaktadır. \n",
    "#H1: Normal dağılım varsayımı sağlanmamaktadır.\n",
    "#p < 0.05 H0 RED , p > 0.05 H0 REDDEDİLEMEZ\n",
    "#Test sonucuna göre normallik varsayımı kontrol ve test grupları için sağlanıyor mu ? Elde edilen p-value değerlerini yorumlayınız.\n",
    "\n",
    "test_stat, pvalue = shapiro(df_control[\"Purchase\"])\n",
    "print('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))\n",
    "\n",
    "#H0 REDDEDİLEMEZ\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "a09937d7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-14T16:59:57.745589Z",
     "iopub.status.busy": "2024-09-14T16:59:57.744957Z",
     "iopub.status.idle": "2024-09-14T16:59:57.751175Z",
     "shell.execute_reply": "2024-09-14T16:59:57.750112Z"
    },
    "papermill": {
     "duration": 0.014989,
     "end_time": "2024-09-14T16:59:57.753739",
     "exception": false,
     "start_time": "2024-09-14T16:59:57.738750",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Test Stat = 0.9589, p-value = 0.1541\n"
     ]
    }
   ],
   "source": [
    "test_stat, pvalue = shapiro(df_test[\"Purchase\"])\n",
    "print('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))\n",
    "#H0 REDDEDİLEMEZ\n",
    "\n",
    "#test ve kontrol grupları normal dağılım göstermemektedir."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "09539020",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-14T16:59:57.766101Z",
     "iopub.status.busy": "2024-09-14T16:59:57.765002Z",
     "iopub.status.idle": "2024-09-14T16:59:57.776032Z",
     "shell.execute_reply": "2024-09-14T16:59:57.774910Z"
    },
    "papermill": {
     "duration": 0.019608,
     "end_time": "2024-09-14T16:59:57.778321",
     "exception": false,
     "start_time": "2024-09-14T16:59:57.758713",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Test Stat = 2.6393, p-value = 0.1083\n"
     ]
    }
   ],
   "source": [
    "#Varyans Homojenliği \n",
    "#H0: Varyanslar homojendir.\n",
    "#H1: Varyanslar homojen Değildir.\n",
    "#p < 0.05 H0 RED , p > 0.05 H0 REDDEDİLEMEZ\n",
    "#Kontrol ve test grubu için varyans homojenliğinin sağlanıp sağlanmadığını Purchase değişkeni üzerinden test ediniz. \n",
    "#Test sonucuna göre normallik varsayımı sağlanıyor mu? Elde edilen p-value değerlerini yorumlayınız. \n",
    "test_stat, pvalue = levene(df_control[\"Purchase\"],\n",
    "                           df_test[\"Purchase\"])\n",
    "print('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))\n",
    "\n",
    "#HO REDDEDİLEMEZ\n",
    "\n",
    "#test ve kontrol gruplarının varyansları homojen dağılım göstermemektedir."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "232191e0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-14T16:59:57.790609Z",
     "iopub.status.busy": "2024-09-14T16:59:57.789725Z",
     "iopub.status.idle": "2024-09-14T16:59:57.798041Z",
     "shell.execute_reply": "2024-09-14T16:59:57.796974Z"
    },
    "papermill": {
     "duration": 0.016939,
     "end_time": "2024-09-14T16:59:57.800323",
     "exception": false,
     "start_time": "2024-09-14T16:59:57.783384",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Test Stat = 723.0000, p-value = 0.4617\n"
     ]
    }
   ],
   "source": [
    "#Adım 2: Normallik Varsayımı ve Varyans Homojenliği sonuçlarına göre uygun testi seçiniz.\n",
    "#Varsayımlar sağlanmıyorsa mannwhitneyu testi (non-parametrik test)\n",
    "test_stat, pvalue = mannwhitneyu(df_control[\"Purchase\"],\n",
    "                                 df_test[\"Purchase\"])\n",
    "\n",
    "print('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))\n",
    "\n",
    "#HO REDDEDİLEMEZ. Yani Teklif verme türünün değiştirilmesi satın alınan ürün sayısında değişikliğe neden olmamıştır.  Test sonucunda elde edilen p_value değerini göz önünde bulundurarak kontrol ve test grubu satın alma ortalamaları arasında istatistiki olarak anlamlı bir fark bulunmamaktadır.\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "fd5736cf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-14T16:59:57.812355Z",
     "iopub.status.busy": "2024-09-14T16:59:57.811939Z",
     "iopub.status.idle": "2024-09-14T16:59:57.816741Z",
     "shell.execute_reply": "2024-09-14T16:59:57.815786Z"
    },
    "papermill": {
     "duration": 0.013447,
     "end_time": "2024-09-14T16:59:57.818945",
     "exception": false,
     "start_time": "2024-09-14T16:59:57.805498",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Adım 1: Hangi testi kullandınız, sebeplerini belirtiniz\n",
    "\n",
    "#normal dağılıma sahip olmadığı ve varyansların homojen dağılmamasından kaynaklı olarak mannwhitneyu kullanıldı.\n",
    "\n",
    "# Adım 2: Elde ettiğiniz test sonuçlarına göre müşteriye tavsiyede bulununuz.\n",
    "#Teklif verme türündeki değişiklik satın alınan ürün sayısında anlamlı bir değişikliğe sebep olmamıştır. Teklif türünde değişikliğe gitmek maliyet açısından olumsuz bir etki oluşturuyorsa teklif türü değişikliğine gerek yoktur."
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 5701711,
     "sourceId": 9394803,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30761,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.14"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 6.282428,
   "end_time": "2024-09-14T16:59:58.445423",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-09-14T16:59:52.162995",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
